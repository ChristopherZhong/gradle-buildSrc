@file:Suppress("ObjectPropertyName", "FunctionName", "unused", "SpellCheckingInspection")

import Versions.AWSSDK
import Versions.AWS_JAVA_SDK
import Versions.DAGGER
import Versions.GUICE
import Versions.JACKSON
import Versions.JAVAFX
import Versions.JUNIT5
import Versions.KOIN
import Versions.KOTLIN
import Versions.KOTLINX
import Versions.LOG4J
import Versions.MOCKITO
import Versions.SPRING_BOOT
import Versions.TRUTH
import org.gradle.api.artifacts.dsl.DependencyHandler

val DependencyHandler.`assertj-core` get() = "org.assertj:assertj-core"
fun DependencyHandler.`assertj-core`() = "$`assertj-core`:3.13.2"
val DependencyHandler.`awssdk-bom` get() = "software.amazon.awssdk:bom"
fun DependencyHandler.`awssdk-bom`() = "$`awssdk-bom`:$AWSSDK"
val DependencyHandler.`awssdk-dynamodb` get() = "software.amazon.awssdk:dynamodb"
fun DependencyHandler.`awssdk-dynamodb`() = "$`awssdk-dynamodb`:$AWSSDK"
val DependencyHandler.`aws-java-sdk-bom` get() = "com.amazonaws:aws-java-sdk-bom"
fun DependencyHandler.`aws-java-sdk-bom`() = "$`aws-java-sdk-bom`:$AWS_JAVA_SDK"
val DependencyHandler.`aws-java-sdk-dynamodb` get() = "com.amazonaws:aws-java-sdk-dynamodb"
fun DependencyHandler.`aws-java-sdk-dynamodb`() = "$`aws-java-sdk-dynamodb`:$AWS_JAVA_SDK"
val DependencyHandler.`aws-java-sdk-ecs` get() = "com.amazonaws:aws-java-sdk-ecs"
fun DependencyHandler.`aws-java-sdk-ecs`() = "$`aws-java-sdk-ecs`:$AWS_JAVA_SDK"
val DependencyHandler.`aws-java-sdk-s3` get() = "com.amazonaws:aws-java-sdk-s3"
fun DependencyHandler.`aws-java-sdk-s3`() = "$`aws-java-sdk-s3`:$AWS_JAVA_SDK"
val DependencyHandler.`aws-lambda-java-core` get() = "com.amazonaws:aws-lambda-java-core"
fun DependencyHandler.`aws-lambda-java-core`() = "$`aws-lambda-java-core`:1.2.0"
val DependencyHandler.`aws-lambda-java-events` get() = "com.amazonaws:aws-lambda-java-events"
fun DependencyHandler.`aws-lambda-java-events`() = "$`aws-lambda-java-events`:2.2.2"
val DependencyHandler.`aws-lambda-java-log4j2` get() = "com.amazonaws:aws-lambda-java-log4j2"
fun DependencyHandler.`aws-lambda-java-log4j2`() = "$`aws-lambda-java-log4j2`:1.1.0"
val DependencyHandler.`commons-csv` get() = "org.apache.commons:commons-csv"
fun DependencyHandler.`commons-csv`() = "$`commons-csv`:1.6"
val DependencyHandler.`commons-net` get() = "commons-net:commons-net"
fun DependencyHandler.`commons-net`() = "$`commons-net`:3.6"
val DependencyHandler.dagger get() = "com.google.dagger:dagger"
fun DependencyHandler.dagger() = "$dagger:$DAGGER"
val DependencyHandler.`dagger-compiler` get() = "com.google.dagger:dagger-compiler"
fun DependencyHandler.`dagger-compiler`() = "$`dagger-compiler`:$DAGGER"
val DependencyHandler.`gradle-versions-plugin` get() = "com.github.ben-manes.versions:gradle-versions-plugin"
fun DependencyHandler.`gradle-versions-plugin`() = "$`gradle-versions-plugin`:0.22.0"
val DependencyHandler.`graphiql-spring-boot-starter` get() = "com.graphql-java:graphiql-spring-boot-starter"
fun DependencyHandler.`graphiql-spring-boot-starter`() = "$`graphiql-spring-boot-starter`:5.0.2"
val DependencyHandler.`graphql-java` get() = "com.graphql-java:graphql-java"
fun DependencyHandler.`graphql-java`() = "$`graphql-java`:13.0"
val DependencyHandler.`graphql-java-tools` get() = "com.graphql-java:graphql-java-tools"
fun DependencyHandler.`graphql-java-tools`() = "$`graphql-java-tools`:5.2.4"
val DependencyHandler.`graphql-java-spring-boot-starter-webflux` get() = "com.graphql-java:graphql-java-spring-boot-starter-webflux"
fun DependencyHandler.`graphql-java-spring-boot-starter-webflux`() = "$`graphql-java-spring-boot-starter-webflux`:1.0"
val DependencyHandler.`graphql-spring-boot-starter` get() = "com.graphql-java:graphql-spring-boot-starter"
fun DependencyHandler.`graphql-spring-boot-starter`() = "$`graphql-spring-boot-starter`:5.0.2"
val DependencyHandler.guice get() = "com.google.inject:guice"
fun DependencyHandler.guice() = "$guice:$GUICE"
val DependencyHandler.`guice-assistedinject` get() = "com.google.inject.extensions:guice-assistedinject"
fun DependencyHandler.`guice-assistedinject`() = "$`guice-assistedinject`:$GUICE"
val DependencyHandler.`guice-bom` get() = "com.google.inject:guice-bom"
fun DependencyHandler.`guice-bom`() = "$`guice-bom`:$GUICE"
val DependencyHandler.`jackson-bom` get() = "com.fasterxml.jackson:jackson-bom"
fun DependencyHandler.`jackson-bom`() = "$`jackson-bom`:$JACKSON"
val DependencyHandler.`jackson-dataformat-yaml` get() = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml"
fun DependencyHandler.`jackson-dataformat-yaml`() = "$`jackson-dataformat-yaml`:$JACKSON"
val DependencyHandler.`jackson-module-kotlin` get() = "com.fasterxml.jackson.module:jackson-module-kotlin"
fun DependencyHandler.`jackson-module-kotlin`() = "$`jackson-module-kotlin`:$JACKSON"
val DependencyHandler.`javafx-base` get() = "org.openjfx:javafx-base"
fun DependencyHandler.`javafx-base`() = "$`javafx-base`:$JAVAFX"
val DependencyHandler.`javafx-controls` get() = "org.openjfx:javafx-controls"
fun DependencyHandler.`javafx-controls`() = "$`javafx-controls`:$JAVAFX"
val DependencyHandler.`javafx-fxml` get() = "org.openjfx:javafx-fxml"
fun DependencyHandler.`javafx-fxml`() = "$`javafx-fxml`:$JAVAFX"
val DependencyHandler.`javafx-graphics` get() = "org.openjfx:javafx-graphics"
fun DependencyHandler.`javafx-graphics`() = "$`javafx-graphics`:$JAVAFX"
val DependencyHandler.`javafx-media` get() = "org.openjfx:javafx-media"
fun DependencyHandler.`javafx-media`() = "$`javafx-media`:$JAVAFX"
val DependencyHandler.`javafx-swing` get() = "org.openjfx:javafx-swing"
fun DependencyHandler.`javafx-swing`() = "$`javafx-swing`:$JAVAFX"
val DependencyHandler.`javafx-web` get() = "org.openjfx:javafx-web"
fun DependencyHandler.`javafx-web`() = "$`javafx-web`:$JAVAFX"
val DependencyHandler.`javax-inject` get() = "javax.inject:javax.inject"
fun DependencyHandler.`javax-inject`() = "$`javax-inject`:1"
val DependencyHandler.jmockit get() = "org.jmockit:jmockit"
fun DependencyHandler.jmockit() = "$jmockit:1.43"
val DependencyHandler.junit get() = "junit:junit"
fun DependencyHandler.junit() = "$junit:4.12"
val DependencyHandler.`junit-bom` get() = "org.junit:junit-bom"
fun DependencyHandler.`junit-bom`() = "$`junit-bom`:$JUNIT5"
val DependencyHandler.`junit-jupiter-api` get() = "org.junit.jupiter:junit-jupiter-api"
fun DependencyHandler.`junit-jupiter-api`() = "$`junit-jupiter-api`:$JUNIT5"
val DependencyHandler.`junit-jupiter-engine` get() = "org.junit.jupiter:junit-jupiter-engine"
fun DependencyHandler.`junit-jupiter-engine`() = "$`junit-jupiter-engine`:$JUNIT5"
val DependencyHandler.`junit-jupiter-params` get() = "org.junit.jupiter:junit-jupiter-params"
fun DependencyHandler.`junit-jupiter-params`() = "$`junit-jupiter-params`:$JUNIT5"
val DependencyHandler.`junit-vintage-engine` get() = "org.junit.vintage:junit-vintage-engine"
fun DependencyHandler.`junit-vintage-engine`() = "$`junit-vintage-engine`:$JUNIT5"
val DependencyHandler.httpcore get() = "org.apache.httpcomponents:httpcore"
fun DependencyHandler.httpcore() = "$httpcore:4.4.10"
val DependencyHandler.`kodein-di-generic-jvm` get() = "org.kodein.di:kodein-di-generic-jvm"
fun DependencyHandler.`kodein-di-generic-jvm`() = "$`kodein-di-generic-jvm`:6.0.1"
val DependencyHandler.`koin-core` get() = "org.koin:koin-core"
fun DependencyHandler.`koin-core`() = "$`koin-core`:$KOIN"
val DependencyHandler.`koin-core-ext` get() = "org.koin:koin-core-ext"
fun DependencyHandler.`koin-core-ext`() = "$`koin-core-ext`:$KOIN"
val DependencyHandler.`koin-java` get() = "org.koin:koin-java"
fun DependencyHandler.`koin-java`() = "$`koin-java`:$KOIN"
val DependencyHandler.`koin-test` get() = "org.koin:koin-test"
fun DependencyHandler.`koin-test`() = "$`koin-test`:$KOIN"
val DependencyHandler.`kotlin-reflect` get() = "org.jetbrains.kotlin:kotlin-reflect"
fun DependencyHandler.`kotlin-reflect`() = "$`kotlin-reflect`:$KOTLIN"
val DependencyHandler.`kotlin-stdlib` get() = "org.jetbrains.kotlin:kotlin-stdlib"
fun DependencyHandler.`kotlin-stdlib`() = "$`kotlin-stdlib`:$KOTLIN"
val DependencyHandler.`kotlin-stdlib-jdk8` get() = "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
fun DependencyHandler.`kotlin-stdlib-jdk8`() = "$`kotlin-stdlib-jdk8`:$KOTLIN"
val DependencyHandler.`kotlin-test` get() = "org.jetbrains.kotlin:kotlin-test"
fun DependencyHandler.`kotlin-test`() = "$`kotlin-test`:$KOTLIN"
val DependencyHandler.`kotlin-test-junit5` get() = "org.jetbrains.kotlin:kotlin-test-junit5"
fun DependencyHandler.`kotlin-test-junit5`() = "$`kotlin-test-junit5`:$KOTLIN"
val DependencyHandler.`kotlinx-coroutines-core` get() = "org.jetbrains.kotlinx:kotlinx-coroutines-core"
fun DependencyHandler.`kotlinx-coroutines-core`() = "$`kotlinx-coroutines-core`:$KOTLINX"
val DependencyHandler.`kotlinx-coroutines-core-common` get() = "org.jetbrains.kotlinx:kotlinx-coroutines-core-common"
fun DependencyHandler.`kotlinx-coroutines-core-common`() = "$`kotlinx-coroutines-core-common`:$KOTLINX"
val DependencyHandler.`kotlinx-coroutines-javafx` get() = "org.jetbrains.kotlinx:kotlinx-coroutines-javafx"
fun DependencyHandler.`kotlinx-coroutines-javafx`() = "$`kotlinx-coroutines-javafx`:$KOTLINX"
val DependencyHandler.`kotlinx-coroutines-jdk8` get() = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8"
fun DependencyHandler.`kotlinx-coroutines-jdk8`() = "$`kotlinx-coroutines-jdk8`:$KOTLINX"
val DependencyHandler.`log4j-1_2-api` get() = "org.apache.logging.log4j:log4j-1.2-api"
fun DependencyHandler.`log4j-1_2-api`() = "$`log4j-1_2-api`:$LOG4J"
val DependencyHandler.`log4j-api` get() = "org.apache.logging.log4j:log4j-api"
fun DependencyHandler.`log4j-api`() = "$`log4j-api`:$LOG4J"
val DependencyHandler.`log4j-api-kotlin` get() = "org.apache.logging.log4j:log4j-api-kotlin"
fun DependencyHandler.`log4j-api-kotlin`() = "$`log4j-api-kotlin`:1.0.0"
val DependencyHandler.`log4j-bom` get() = "org.apache.logging.log4j:log4j-bom"
fun DependencyHandler.`log4j-bom`() = "$`log4j-bom`:$LOG4J"
val DependencyHandler.`log4j-core` get() = "org.apache.logging.log4j:log4j-core"
fun DependencyHandler.`log4j-core`() = "$`log4j-core`:$LOG4J"
val DependencyHandler.`log4j-jcl` get() = "org.apache.logging.log4j:log4j-jcl"
fun DependencyHandler.`log4j-jcl`() = "$`log4j-jcl`:$LOG4J"
val DependencyHandler.`log4j-slf4j-impl` get() = "org.apache.logging.log4j:log4j-slf4j-impl"
fun DependencyHandler.`log4j-slf4j-impl`() = "$`log4j-slf4j-impl`:$LOG4J"
val DependencyHandler.lombok get() = "org.projectlombok:lombok"
fun DependencyHandler.lombok() = "$lombok:1.18.4"
val DependencyHandler.mockk get() = "io.mockk:mockk"
fun DependencyHandler.mockk() = "$mockk:1.9.3"
val DependencyHandler.`mock-ftp-server` get() = "org.mockftpserver:MockFtpServer"
fun DependencyHandler.`mock-ftp-server`() = "$`mock-ftp-server`:2.7.1"
val DependencyHandler.`mockito-core` get() = "org.mockito:mockito-core"
fun DependencyHandler.`mockito-core`() = "$`mockito-core`:$MOCKITO"
val DependencyHandler.`mockito-junit-jupiter` get() = "org.mockito:mockito-junit-jupiter"
fun DependencyHandler.`mockito-junit-jupiter`() = "$`mockito-junit-jupiter`:$MOCKITO"
val DependencyHandler.`org-eclipse-jdt-annotation` get() = "org.eclipse.jdt:org.eclipse.jdt.annotation"
fun DependencyHandler.`org-eclipse-jdt-annotation`() = "$`org-eclipse-jdt-annotation`:2.2.100"
val DependencyHandler.rxjava get() = "io.reactivex.rxjava2:rxjava"
fun DependencyHandler.rxjava() = "$rxjava:2.2.4"
val DependencyHandler.`slf4j-api` get() = "org.slf4j:slf4j-api"
fun DependencyHandler.`slf4j-api`() = "$`slf4j-api`:1.7.25"
val DependencyHandler.`spring-boot` get() = "org.springframework.boot:spring-boot"
fun DependencyHandler.`spring-boot`() = "$`spring-boot`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-actuator` get() = "org.springframework.boot:spring-boot-actuator"
fun DependencyHandler.`spring-boot-actuator`() = "$`spring-boot-actuator`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-autoconfigure` get() = "org.springframework.boot:spring-boot-autoconfigure"
fun DependencyHandler.`spring-boot-autoconfigure`() = "$`spring-boot-autoconfigure`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-configuration-processor` get() = "org.springframework.boot:spring-boot-configuration-processor"
fun DependencyHandler.`spring-boot-configuration-processor`() = "$`spring-boot-configuration-processor`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-devtools` get() = "org.springframework.boot:spring-boot-devtools"
fun DependencyHandler.`spring-boot-devtools`() = "$`spring-boot-devtools`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter` get() = "org.springframework.boot:spring-boot-starter"
fun DependencyHandler.`spring-boot-starter`() = "$`spring-boot-starter`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-activemq` get() = "org.springframework.boot:spring-boot-starter-activemq"
fun DependencyHandler.`spring-boot-starter-activemq`() = "$`spring-boot-starter-activemq`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-actuator` get() = "org.springframework.boot:spring-boot-starter-actuator"
fun DependencyHandler.`spring-boot-starter-actuator`() = "$`spring-boot-starter-actuator`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-aop` get() = "org.springframework.boot:spring-boot-starter-aop"
fun DependencyHandler.`spring-boot-starter-aop`() = "$`spring-boot-starter-aop`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-data-jpa` get() = "org.springframework.boot:spring-boot-starter-data-jpa"
fun DependencyHandler.`spring-boot-starter-data-jpa`() = "$`spring-boot-starter-data-jpa`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-data-mongodb` get() = "org.springframework.boot:spring-boot-starter-data-mongodb"
fun DependencyHandler.`spring-boot-starter-data-mongodb`() = "$`spring-boot-starter-data-mongodb`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-data-rest` get() = "org.springframework.boot:spring-boot-starter-data-rest"
fun DependencyHandler.`spring-boot-starter-data-rest`() = "$`spring-boot-starter-data-rest`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-json` get() = "org.springframework.boot:spring-boot-starter-json"
fun DependencyHandler.`spring-boot-starter-json`() = "$`spring-boot-starter-json`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-log4j2` get() = "org.springframework.boot:spring-boot-starter-log4j2"
fun DependencyHandler.`spring-boot-starter-log4j2`() = "$`spring-boot-starter-log4j2`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-logging` get() = "org.springframework.boot:spring-boot-starter-logging"
fun DependencyHandler.`spring-boot-starter-logging`() = "$`spring-boot-starter-logging`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-mail` get() = "org.springframework.boot:spring-boot-starter-mail"
fun DependencyHandler.`spring-boot-starter-mail`() = "$`spring-boot-starter-mail`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-parent` get() = "org.springframework.boot:spring-boot-starter-parent"
fun DependencyHandler.`spring-boot-starter-parent`() = "$`spring-boot-starter-parent`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-security` get() = "org.springframework.boot:spring-boot-starter-security"
fun DependencyHandler.`spring-boot-starter-security`() = "$`spring-boot-starter-security`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-test` get() = "org.springframework.boot:spring-boot-starter-test"
fun DependencyHandler.`spring-boot-starter-test`() = "$`spring-boot-starter-test`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-web` get() = "org.springframework.boot:spring-boot-starter-web"
fun DependencyHandler.`spring-boot-starter-web`() = "$`spring-boot-starter-web`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-webflux` get() = "org.springframework.boot:spring-boot-starter-webflux"
fun DependencyHandler.`spring-boot-starter-webflux`() = "$`spring-boot-starter-webflux`:$SPRING_BOOT"
val DependencyHandler.`spring-boot-starter-websocket` get() = "org.springframework.boot:spring-boot-starter-websocket"
fun DependencyHandler.`spring-boot-starter-websocket`() = "$`spring-boot-starter-websocket`:$SPRING_BOOT"
val DependencyHandler.`spring-context` get() = "org.springframework:spring-context"
fun DependencyHandler.`spring-context`() = "$`spring-context`:5.1.5.RELEASE"
val DependencyHandler.`stripe-java` get() = "com.stripe:stripe-java"
fun DependencyHandler.`stripe-java`() = "$`stripe-java`:7.0.0"
val DependencyHandler.truth get() = "com.google.truth:truth"
fun DependencyHandler.truth() = "$truth:$TRUTH"
val DependencyHandler.`truth-java8-extension` get() = "com.google.truth.extensions:truth-java8-extension"
fun DependencyHandler.`truth-java8-extension`() = "$`truth-java8-extension`:$TRUTH"
val DependencyHandler.`validation-api` get() = "javax.validation:validation-api"
fun DependencyHandler.`validation-api`() = "$`validation-api`:2.0.1.Final"
